<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>7c12b00d-afca-4251-9c62-af5e4e497dbd</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" Version="1.3.2" />
		<PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" Version="1.2.2" />
		<PackageReference Include="CompressedStaticFiles" Version="2.1.0" />
		<PackageReference Include="JsonPatch.Net" Version="2.1.0" />
		<PackageReference Include="JsonPath.Net" Version="0.6.7" />
		<PackageReference Include="JsonSchema.Net" Version="5.2.5" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="7.0.9" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.10" />
		<PackageReference Include="Microsoft.Azure.SignalR" Version="1.21.4" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.9" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.9">
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		  <PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.9" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.9">
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		  <PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="7.0.4" />
		<PackageReference Include="OpenTelemetry" Version="1.5.1" />
		<PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" Version="1.5.1" />
		<PackageReference Include="OpenTelemetry.Extensions.Hosting" Version="1.5.1" />
		<PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" Version="1.5.1-beta.1" />
		<PackageReference Include="OpenTelemetry.Instrumentation.EntityFrameworkCore" Version="1.0.0-beta.7" />
		<PackageReference Include="OpenTelemetry.Instrumentation.Runtime" Version="1.5.0" />
		<PackageReference Include="PrincipleStudios.OpenApiCodegen.Json.Extensions" Version="0.14.0" />
		<PackageReference Include="PrincipleStudios.OpenApiCodegen.Server.Mvc" Version="0.14.3" />
		<PackageReference Include="System.Linq.Async" Version="6.0.1" />
	</ItemGroup>

	<ItemGroup>
		<OpenApiSchemaCSharpServerOptions Include="Api\codegen.config.yaml" />
		<OpenApiSchemaMvcServer Include="$(SolutionRoot)schemas\api.yaml" Link="Api\api.yaml" />
		<EmbeddedResource Include="$(SolutionRoot)schemas\documents\*.json">
			<LogicalName>Documents.Types.%(FileName).schema.json</LogicalName>
			<Link>Documents/Types/%(FileName)/schema.json</Link>
		</EmbeddedResource>
		<EmbeddedResource Include="Documents\Types\*\document-type.json" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\GameDocumentEngine.DevProxy\GameDocumentEngine.DevProxy.csproj" Condition=" '$(Configuration)' == 'Debug' " />
	  <ProjectReference Include="..\GameDocumentEngine.Ui\GameDocumentEngine.Ui.esproj" Condition="Exists('..\GameDocumentEngine.Ui\GameDocumentEngine.Ui.esproj')" />
	</ItemGroup>

	<Target Name="SetupDockerCompose" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
	    <Exec Command="docker ps" ContinueOnError="true" EchoOff="true" StandardOutputImportance="low" StandardErrorImportance="low">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Message Condition="'$(ErrorCode)' != '0'" Text="The docker runtime was not started." />
	    <Exec WorkingDirectory="$(SolutionRoot)/eng/db" Command="docker-compose up -d" ContinueOnError="true" Condition="'$(ErrorCode)' == '0'" />
	    <Exec WorkingDirectory="$(SolutionRoot)/eng/jaeger" Command="docker-compose up -d" ContinueOnError="true" Condition="'$(ErrorCode)' == '0'" />
	</Target>


	<Target Name="GetEFProjectMetadata">
		<MSBuild Condition=" '$(TargetFramework)' == '' " Projects="$(MSBuildProjectFile)" Targets="GetEFProjectMetadata" Properties="TargetFramework=$(TargetFrameworks.Split(';')[0]);EFProjectMetadataFile=$(EFProjectMetadataFile)" />
		<ItemGroup Condition=" '$(TargetFramework)' != '' ">
			<EFProjectMetadata Include="AssemblyName: $(AssemblyName)" />
			<EFProjectMetadata Include="Language: $(Language)" />
			<EFProjectMetadata Include="OutputPath: $(OutputPath)" />
			<EFProjectMetadata Include="Platform: $(Platform)" />
			<EFProjectMetadata Include="PlatformTarget: $(PlatformTarget)" />
			<EFProjectMetadata Include="ProjectAssetsFile: $(ProjectAssetsFile)" />
			<EFProjectMetadata Include="ProjectDir: $(ProjectDir)" />
			<EFProjectMetadata Include="RootNamespace: $(RootNamespace)" />
			<EFProjectMetadata Include="RuntimeFrameworkVersion: $(RuntimeFrameworkVersion)" />
			<EFProjectMetadata Include="TargetFileName: $(TargetFileName)" />
			<EFProjectMetadata Include="TargetFrameworkMoniker: $(TargetFrameworkMoniker)" />
			<EFProjectMetadata Include="Nullable: $(Nullable)" />
			<EFProjectMetadata Include="TargetFramework: $(TargetFramework)" />
			<EFProjectMetadata Include="TargetPlatformIdentifier: $(TargetPlatformIdentifier)" />
		</ItemGroup>
		<WriteLinesToFile Condition=" '$(TargetFramework)' != '' " File="$(EFProjectMetadataFile)" Lines="@(EFProjectMetadata)" />
	</Target>
</Project>
