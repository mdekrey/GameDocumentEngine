diff --git a/dist/MDXEditor.js b/dist/MDXEditor.js
index 99d28c7393b17441cd40514fa5675ec3619b3c34..dbc2d5a53ed1666111715fdf0a56c7d05d600e06 100644
--- a/dist/MDXEditor.js
+++ b/dist/MDXEditor.js
@@ -10,7 +10,10 @@ import { ContentEditable } from "@lexical/react/LexicalContentEditable.js";
 import LexicalErrorBoundary from "@lexical/react/LexicalErrorBoundary.js";
 import classNames from "classnames";
 import { noop } from "./utils/fp.js";
-const LexicalProvider = ({ children }) => {
+const LexicalProvider = ({
+  children,
+  theme
+}) => {
   const [initialRootEditorState, nodes, readOnly] = useCellValues(initialRootEditorState$, usedLexicalNodes$, readOnly$);
   return /* @__PURE__ */ React__default.createElement(
     LexicalComposer,
@@ -19,7 +22,7 @@ const LexicalProvider = ({ children }) => {
         editable: !readOnly,
         editorState: initialRootEditorState,
         namespace: "MDXEditor",
-        theme: lexicalTheme,
+        theme: theme ?? lexicalTheme,
         nodes,
         onError: (error) => {
           throw error;
@@ -122,6 +125,7 @@ const MDXEditor = React__default.forwardRef((props, ref) => {
       plugins: [
         corePlugin({
           contentEditableClassName: props.contentEditableClassName ?? "",
+          theme: props.theme,
           initialMarkdown: props.markdown,
           onChange: props.onChange ?? noop,
           onBlur: props.onBlur ?? noop,
@@ -136,7 +140,7 @@ const MDXEditor = React__default.forwardRef((props, ref) => {
         ...props.plugins || []
       ]
     },
-    /* @__PURE__ */ React__default.createElement(EditorRootElement, { className: props.className }, /* @__PURE__ */ React__default.createElement(LexicalProvider, null, /* @__PURE__ */ React__default.createElement(RichTextEditor, null))),
+    /* @__PURE__ */ React__default.createElement(EditorRootElement, { className: props.className }, /* @__PURE__ */ React__default.createElement(LexicalProvider, { theme: props.lexicalTheme }, /* @__PURE__ */ React__default.createElement(RichTextEditor, null))),
     /* @__PURE__ */ React__default.createElement(Methods, { mdxRef: ref })
   );
 });
diff --git a/dist/index.d.ts b/dist/index.d.ts
index b01842eee804f9b83230eee73d7a88b3a8b7cde5..bf0824685ebc12a4883ddf86b7c359d69b162c25 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -37,6 +37,7 @@ import { Directives } from 'mdast-util-directive';
 import { DOMConversionMap } from 'lexical';
 import { DOMExportOutput } from 'lexical';
 import { EditorConfig } from 'lexical';
+import { EditorThemeClasses } from 'lexical';
 import { ElementNode } from 'lexical';
 import { Extension } from 'micromark-util-types';
 import { Extension as Extension_2 } from '@codemirror/state';
@@ -1879,6 +1880,10 @@ export declare interface MDXEditorMethods {
  * @group MDXEditor
  */
 export declare interface MDXEditorProps {
+/**
+     * the Lexical editor theme to apply to elements created for markdown.
+     */
+    lexicalTheme?: EditorThemeClasses;
     /**
      * the CSS class to apply to the content editable element of the editor.
      * Use this to style the various content elements like lists and blockquotes.